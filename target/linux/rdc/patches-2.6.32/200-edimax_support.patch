diff -ru --new-file linux-2.6.32.33.orig//arch/x86/mach-rdc321x/Makefile linux-2.6.32.33/arch/x86/mach-rdc321x/Makefile
--- linux-2.6.32.33.orig//arch/x86/mach-rdc321x/Makefile	2011-08-28 17:38:15.250266688 +0200
+++ linux-2.6.32.33/arch/x86/mach-rdc321x/Makefile	2011-08-28 20:20:42.660367444 +0200
@@ -1,5 +1,5 @@
 #
 # Makefile for the RDC321x specific parts of the kernel
 #
-obj-$(CONFIG_X86_RDC321X)	:= platform.o reboot.o boards/sitecom.o boards/ar525w.o boards/bifferboard.o boards/r8610.o
+obj-$(CONFIG_X86_RDC321X)	:= platform.o reboot.o boards/sitecom.o boards/ar525w.o boards/bifferboard.o boards/r8610.o boards/edimax.o
 
diff -ru --new-file linux-2.6.32.33.orig//arch/x86/mach-rdc321x/boards/edimax.c linux-2.6.32.33/arch/x86/mach-rdc321x/boards/edimax.c
--- linux-2.6.32.33.orig//arch/x86/mach-rdc321x/boards/edimax.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.32.33/arch/x86/mach-rdc321x/boards/edimax.c	2011-08-28 20:20:32.020367333 +0200
@@ -0,0 +1,120 @@
+/*
+ *  Sitecom RDC321x platform devices
+ *
+ *  Copyright (C) 2007-2009 OpenWrt.org
+ *  Copyright (C) 2007 Florian Fainelli <florian@openwrt.org>
+ *  Copyright (C) 2008-2009 Daniel Gimpelevich <daniel@gimpelevich.san-francisco.ca.us>
+ *
+ *  This program is free software; you can redistribute it and/or
+ *  modify it under the terms of the GNU General Public License
+ *  as published by the Free Software Foundation; either version 2
+ *  of the License, or (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the
+ *  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+ *  Boston, MA  02110-1301, USA.
+ *
+ */
+
+#include <linux/init.h>
+#include <linux/mtd/physmap.h>
+#include <linux/input.h>
+
+#include <asm/rdc_boards.h>
+
+struct csys_header {
+	char		magic[4]; 
+	u32		linuxLength;
+	u32 	initrdLength;
+	char		wrrm[4]; 
+	u32 	unknown3;
+}  __attribute__ ((packed));
+
+static struct gpio_led edimax_leds[] = {
+	{ .name = "rdc321x:power", .gpio = 15, .active_low = 1},
+	{ .name = "rdc321x:usb0", .gpio = 0, .active_low = 1},
+	{ .name = "rdc321x:usb1", .gpio = 1, .active_low = 1},
+  { .name = "rdc321x:wlan", .gpio = 16, .active_low = 1 }
+};
+
+static struct gpio_button edimax_btns[] = {
+	{
+		.gpio = 6,
+		.code = BTN_0,
+		.desc = "Reset",
+		.active_low = 1,
+	}
+};
+
+#define BOOTLOADER_SIZE 0x00030000
+
+static int __init parse_edimax_partitions(struct mtd_info *master, struct mtd_partition **pparts, unsigned long plat_data)
+{
+	struct csys_header header;
+	int res;
+	size_t len;
+	struct mtd_partition *rdc_flash_parts;
+	struct rdc_platform_data *pdata = (struct rdc_platform_data *) plat_data;
+
+	if (master->size != 0x800000 && master->size != 0x400000) /* 8MB */ {
+		return -ENOSYS;
+  }
+
+	res =  master->read(master, 0x8000, sizeof(header), &len, (char *)&header);
+	if (res) {
+		return res;
+  }
+
+	if (strncmp(header.magic, "CSYS", 4) || (strncmp(header.wrrm, "WRRM", 4) && strncmp(header.wrrm, "3GR1", 4))) {
+    int a = *((int*)header.magic);
+    int b = *((int*)header.wrrm);
+		return -ENOSYS;
+  }
+
+	rdc_flash_parts = kzalloc(sizeof(struct mtd_partition) * 5, GFP_KERNEL);
+
+
+	rdc_flash_parts[0].name = "firmware";
+	rdc_flash_parts[0].offset = 0;
+	rdc_flash_parts[0].size = master->size- BOOTLOADER_SIZE - rdc_flash_parts[0].offset;
+
+	rdc_flash_parts[1].name = "kernel";
+	rdc_flash_parts[1].offset = rdc_flash_parts[0].offset;
+	rdc_flash_parts[2].name = "rootfs";
+	rdc_flash_parts[2].offset = header.initrdLength;
+
+	rdc_flash_parts[1].size = rdc_flash_parts[2].offset - rdc_flash_parts[1].offset;
+	rdc_flash_parts[2].size = rdc_flash_parts[0].size - rdc_flash_parts[1].size;
+	
+  rdc_flash_parts[3].name = "bootloader";
+	rdc_flash_parts[3].offset = master->size - BOOTLOADER_SIZE;
+	rdc_flash_parts[3].size = BOOTLOADER_SIZE;
+
+	*pparts = rdc_flash_parts;
+
+	pdata->led_data.num_leds = ARRAY_SIZE(edimax_leds);
+	pdata->led_data.leds = edimax_leds;
+	pdata->button_data.nbuttons = ARRAY_SIZE(edimax_btns);
+	pdata->button_data.buttons = edimax_btns;
+
+	return 4;
+}
+
+struct mtd_part_parser __initdata edimax_parser = {
+	.owner = THIS_MODULE,
+	.parse_fn = parse_edimax_partitions,
+	.name = "Edimax",
+};
+
+static int __init edimax_setup(void)
+{
+	return register_mtd_parser(&edimax_parser);
+}
+
+arch_initcall(edimax_setup);
diff -ru --new-file linux-2.6.32.33.orig//arch/x86/mach-rdc321x/platform.c linux-2.6.32.33/arch/x86/mach-rdc321x/platform.c
--- linux-2.6.32.33.orig//arch/x86/mach-rdc321x/platform.c	2011-08-28 17:38:15.250266688 +0200
+++ linux-2.6.32.33/arch/x86/mach-rdc321x/platform.c	2011-08-28 20:23:06.680368933 +0200
@@ -57,6 +57,7 @@
 };
 
 const char *__initdata boards[] = {
+	"Edimax",
 	"Sitecom",
 	"AR525W",
 	"Bifferboard",
